<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnProfile.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAApoAAAF3CAYAAAAFPus+AAAABGdBTUEAALGPC/xhBQAAFsFJREFUeF7t
        3XmUnWWdJ/CbWrOHkIRA2EJIgiBEMD2I04MdRbaxBRpBjQhJarn3VlWqKnviAqJIe9SWcRmPCy5I66Ai
        kNoTbLTtY6vjcWTLvlW2yiJkTyp7fvO+b1XPOTNnZk7/m/D5nPOcu7z3vu/z5/c8y+/JAQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAwP/fgPtzudKp48YNvu6yESNvuHDomBsvzo2aNiY3dOrUXHl6ve9nAADw73DNNbmKv7688s77rx30
        1Zobyp9ccGP5jz59U+kzD797wLOfubHkZ596Z8nTi2/IfW/O23PfmTEp13Tnpbkrk78JnQAA/N+lo5Qf
        uGbYzQtuvfi57zx49fqOputP/Evz2+OPzW+LPzVNjD8n7ZWmSfFy4+T48+xJ8Wrz5HipZvyb37r34j82
        3nTeV26dNOT65DYlfXcDAIBE9ZSh1379zpEvvDTrsp0r6y85ta7+glibHxVriqNjVd0F8VphTLxa7Guv
        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
        zRW7KWhYAAAAAElFTkSuQmCC
</value>
  </data>
</root>