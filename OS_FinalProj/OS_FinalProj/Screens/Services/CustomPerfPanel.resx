<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_back.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>