<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_back.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ASBhYqJ7qyJNAAAAAElFTkSuQmCC
</value>
  </data>
</root>